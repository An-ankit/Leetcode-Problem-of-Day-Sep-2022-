class Solution {
public:
    int maxPerformance(int n, vector<int> &speed, vector<int> &efficiency, int k)
{
vector<pair<int, int>> eng;

for (int i = 0; i < n; i++)
{
    eng.push_back({efficiency[i], speed[i]});
}
sort(eng.rbegin(), eng.rend());
priority_queue<int, vector<int>, greater<int>> pq;
long long int ct = 0, ans = 0;
for (int i = 0; i < n; i++)
{
    ct+=eng[i].second;
    pq.push(eng[i].second);

    if (pq.size() > k)
    {
        ct-= pq.top();
        pq.pop();
    }

    ans = max(ans, ct* eng[i].first);
}
return ans % 1000000007;
}
    
};
